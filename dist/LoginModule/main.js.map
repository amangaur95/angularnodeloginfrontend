{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/emailverify/emailverify.component.css","webpack:///./src/app/emailverify/emailverify.component.html","webpack:///./src/app/emailverify/emailverify.component.ts","webpack:///./src/app/forgotpassword/forgotpassword.component.css","webpack:///./src/app/forgotpassword/forgotpassword.component.html","webpack:///./src/app/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/resetpassword/resetpassword.component.css","webpack:///./src/app/resetpassword/resetpassword.component.html","webpack:///./src/app/resetpassword/resetpassword.component.ts","webpack:///./src/app/services/authguard.service.ts","webpack:///./src/app/services/authtokeninterceptor.service.ts","webpack:///./src/app/services/emailverify.service.ts","webpack:///./src/app/services/forgotpassword.service.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/app/services/resetpassword.service.ts","webpack:///./src/app/services/signup.service.ts","webpack:///./src/app/services/sociallogin.service.ts","webpack:///./src/app/services/toaster.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/socialprofile/socialprofile.component.css","webpack:///./src/app/socialprofile/socialprofile.component.html","webpack:///./src/app/socialprofile/socialprofile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SocialprofileComponent } from './socialprofile/socialprofile.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { EmailverifyComponent } from './emailverify/emailverify.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { AuthGuardService } from './services/authguard.service';\n\nconst routes: Routes = [\n  { path:'', component:HomeComponent },\n  { path:'login', component:LoginComponent },\n  { path:'register', component:SignupComponent },\n  { path:'emailverify/:id', component:EmailverifyComponent },\n  { path:'forgotpassword', component:ForgotpasswordComponent },\n  { path:'passwordreset/:id', component:ResetpasswordComponent },\n  { path:'profile', component:ProfileComponent, canActivate:[AuthGuardService] },\n  { path:'socialprofile/:token', component:SocialprofileComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LoginModule';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SocialprofileComponent } from './socialprofile/socialprofile.component';\nimport { ResetpasswordComponent } from './resetpassword/resetpassword.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { EmailverifyComponent } from './emailverify/emailverify.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthGuardService } from './services/authguard.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthtokeninterceptorService } from './services/authtokeninterceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DialogModule } from 'primeng/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    SocialprofileComponent,\n    ResetpasswordComponent,\n    ProfileComponent,\n    HomeComponent,\n    HeaderComponent,\n    ForgotpasswordComponent,\n    EmailverifyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    DialogModule\n  ],\n  providers: [\n    AuthGuardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthtokeninterceptorService,\n      multi: true\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtYWlsdmVyaWZ5L2VtYWlsdmVyaWZ5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"result_verifystatus.linkexpiremsg\\\">\\n  <h3>{{ result_verifystatus.linkexpiremsg.msg1 }} {{ result_verifystatus.linkexpiremsg.msg2 }}</h3>\\n  <p>Click on below link for new verify Link</p>\\n  <a href=\\\"\\\">Resend verification link</a>\\n</div>\\n\\n<div *ngIf=\\\"result_verifystatus.successverification\\\">\\n  <h3>{{ result_verifystatus.successverification.msg1 }} {{ result_verifystatus.successverification.msg2 }}</h3>\\n  <p>You can <a routerLink=\\\"/login\\\">Login</a> now</p>\\n</div>\\n\\n<div *ngIf=\\\"result_verifystatus.userinvalidmsg\\\">\\n  <h3>{{ result_verifystatus.userinvalidmsg.msg1 }} {{ result_verifystatus.userinvalidmsg.msg2 }}</h3>\\n  <p>Click on below link for new verify Link</p>\\n  <a href=\\\"\\\">Resend verification link</a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmailverifyService } from '../services/emailverify.service';\n\n@Component({\n  selector: 'app-emailverify',\n  templateUrl: './emailverify.component.html',\n  styleUrls: ['./emailverify.component.css']\n})\nexport class EmailverifyComponent implements OnInit {\n  id: any;\n  result_verifystatus: any;\n\n  constructor(private activatedroute:ActivatedRoute,\n    private emailverifyservice:EmailverifyService) {\n    this.activatedroute.params.subscribe(params=>{\n      this.id=params['id'];\n    })\n  }\n\n  ngOnInit() {\n    this.emailverifyservice.verifyEmail(this.id)\n    .subscribe((result_verifystatus)=>{\n      this.result_verifystatus=result_verifystatus;\n      console.log(result_verifystatus,\"from emailverifyservice \")\n    },\n    (err)=>{\n      console.log(err);\n    })\n  }\n\n}\n","module.exports = \".box{\\n    margin:70px 0 0 250px;\\n    padding:20px 40px 40px 40px;\\n    border: 1px solid #dfdfdf;\\n    max-width:600px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9yZ290cGFzc3dvcmQvZm9yZ290cGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0Qiw0QkFBNEI7SUFDNUIsMEJBQTBCO0lBQzFCLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdHBhc3N3b3JkL2ZvcmdvdHBhc3N3b3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm94e1xuICAgIG1hcmdpbjo3MHB4IDAgMCAyNTBweDtcbiAgICBwYWRkaW5nOjIwcHggNDBweCA0MHB4IDQwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RmZGZkZjtcbiAgICBtYXgtd2lkdGg6NjAwcHg7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"box\\\">\\n      <h2>Please Enter Your Registered Email</h2>\\n      <form [formGroup]=\\\"angForm\\\" novalidate (submit)=\\\"submit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-md-4\\\">Email</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" #email/>\\n        </div>\\n        <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n            Email is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Next</button>\\n          <!-- <button type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Next</button> -->\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ForgotpasswordService } from '../services/forgotpassword.service';\nimport { ToasterService } from '../services/toaster.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n  angForm:FormGroup;\n  constructor(private fb:FormBuilder,\n    private forgotpasswordservice:ForgotpasswordService,\n    private toasterservice:ToasterService) {\n    this.createForm();\n   }\n\n  createForm(){\n    this.angForm=this.fb.group({\n      email:['', Validators.required]\n    })\n  }\n\n  submit(){\n    if(this.angForm.valid){\n      this.forgotpasswordservice.forgotPassword(this.angForm.value)\n      .subscribe((result_forgotpasswordstatus)=>{\n        if(result_forgotpasswordstatus.code==200){\n          this.toasterservice.successToaster(result_forgotpasswordstatus.successmessage.msg1,result_forgotpasswordstatus.successmessage.msg2);\n        }\n        else{\n          if(result_forgotpasswordstatus.code==403){\n            this.toasterservice.errorToaster(result_forgotpasswordstatus.failuremessage.msg1,result_forgotpasswordstatus.failuremessage.msg2);\n          }\n          else{\n            this.toasterservice.errorToaster(result_forgotpasswordstatus.failuremessage.msg1,result_forgotpasswordstatus.failuremessage.msg2);\n          }\n        }\n      },\n      (err)=>{\n        console.log(err);\n      })\n    }\n    else{\n      Object.keys(this.angForm.controls).forEach((formControl: any) => {\n        this.angForm.controls[formControl].markAsDirty()\n      })\n    }\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home</a>\\n      </li>\\n      <!-- <li *ngIf=\\\"userservice.loggedIn\\\" class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li> -->\\n    </ul>\\n    <ul class=\\\"nav navbar-nav ml-auto\\\">\\n      <li *ngIf=\\\"!userservice.loggedIn\\\" class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span>Login</a>\\n      </li>\\n      <li *ngIf=\\\"!userservice.loggedIn\\\" class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Register</a>\\n      </li>\\n      <li *ngIf=\\\"userservice.loggedIn\\\" class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private userservice:UserService,\n    private router:Router) { \n\n    }\n\n  logout(){\n    this.userservice.logout();\n    this.router.navigate(['login'])\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h2 {\\n    width: 100%;\\n    text-align:center;\\n}\\n.login_btn{\\n    margin-top: 50px;\\n    width: 100%;\\n    text-align: center;\\n}\\n.signup_btn{\\n    margin-top: 70px;\\n    width: 100%;\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0NBQ3JCO0FBQ0Q7SUFDSSxpQkFBaUI7SUFDakIsWUFBWTtJQUNaLG1CQUFtQjtDQUN0QjtBQUNEO0lBQ0ksaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixtQkFBbUI7Q0FDdEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbn1cbi5sb2dpbl9idG57XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uc2lnbnVwX2J0bntcbiAgICBtYXJnaW4tdG9wOiA3MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Home Component</h2>\\n  <div class=\\\"login_btn\\\">\\n    <button class=\\\"btn btn-info\\\" routerLink=\\\"/login\\\">Login</button>\\n  </div>\\n  <div class=\\\"signup_btn\\\">\\n    <button class=\\\"btn btn-danger\\\" routerLink=\\\"/register\\\">Register</button>\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  \n}\n","module.exports = \".box{\\n    margin-top:20px;\\n    padding:40px 40px 40px 40px;\\n    border: 1px solid #dfdfdf;\\n    max-width:600px;\\n}\\nh2{\\n    margin-top:50px\\n}\\n/* #create{\\n    margin-top: 7px;\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQiw0QkFBNEI7SUFDNUIsMEJBQTBCO0lBQzFCLGdCQUFnQjtDQUNuQjtBQUNEO0lBQ0ksZUFBZTtDQUNsQjtBQUNEOztJQUVJIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3h7XG4gICAgbWFyZ2luLXRvcDoyMHB4O1xuICAgIHBhZGRpbmc6NDBweCA0MHB4IDQwcHggNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGZkZmRmO1xuICAgIG1heC13aWR0aDo2MDBweDtcbn1cbmgye1xuICAgIG1hcmdpbi10b3A6NTBweFxufVxuLyogI2NyZWF0ZXtcbiAgICBtYXJnaW4tdG9wOiA3cHg7XG59ICovIl19 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Sign in</h2>\\n      <p>Not a member? Please <a routerLink=\\\"/register\\\">register</a> instead.</p>\\n      <div class=\\\"box\\\">\\n        <form [formGroup]=\\\"angForm\\\" novalidate (submit)=\\\"submit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-4\\\">Email</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" #email/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                Email is required.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"col-md-4\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" #password/>\\n            </div>\\n            <div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\n                Password is required.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n              <!-- <button type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button> -->\\n            </div>\\n            <a routerLink=\\\"/forgotpassword\\\">Forgot Password?</a>\\n            <!-- <button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/forgotpassword']\\\">Forgot Password</button> -->\\n          </form>\\n          <!-- <button (click)=\\\"socialSignIn('facebook')\\\">Sign in with Facebook</button> -->\\n          <!-- <button (click)=\\\"socialSignIn('google')\\\">Sign in with Google</button> -->\\n          <!-- <button (click)=\\\"socialSignIn('linkedin')\\\">Sign in with LinkedIn</button> -->\\n          <button (click)=\\\"facebookLogin()\\\">Sign in with Facebook</button>\\n          <button (click)=\\\"googleLogin()\\\">Sign in with Google</button>\\n          <button (click)=\\\"twitterLogin()\\\">Sign in with Twitter</button>\\n          <button (click)=\\\"linkedinLogin()\\\">Sign in with Linkedin</button>\\n        </div><!--end of box-->\\n    </div><!--end of col-md-12-->\\n  </div><!--end of row-->\\n</div><!--end of container-->\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoginService } from '../services/login.service';\n \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  id:number;\n  email:any;\n  returnUrl: string;\n\npublic error:string;\n  angForm: FormGroup;\n  user: any;\n\n  constructor(private userservice: UserService,\n    private fb: FormBuilder,\n    private router:Router,\n    private toastr: ToastrService,\n    private activateRoute:ActivatedRoute,\n    private loginservice:LoginService,\n    ) { \n    this.createForm();\n  }\n  \n  createForm() {\n    this.angForm = this.fb.group({\n      email: ['', Validators.required ],\n      password: ['', Validators.required ]\n   });\n  }\n\n  public submit(){\n    if(this.angForm.valid){\n      this.loginservice.login(this.angForm.value)\n      .pipe(first())\n      .subscribe((result_loginstatus)=>{\n        if(result_loginstatus==true){\n          this.router.navigateByUrl('profile');\n        }\n      },\n      (err)=>{\n        console.log(err);\n      })\n    }\n    else{\n      Object.keys(this.angForm.controls).forEach((formControl: any) => {\n        this.angForm.controls[formControl].markAsDirty()\n      })\n    }\n  }\n\n  showSuccess() {\n    this.toastr.success('You Successfully LoggedIn', 'Toastr fun!');\n  }\n\n  ngOnInit() {\n    this.userservice.logout();\n    // this.returnUrl = this.activateRoute.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  facebookLogin(){\n    window.location.href = \"http://localhost:3000/auth/facebook\" ;\n  }\n\n  googleLogin(){\n    window.location.href = \"http://localhost:3000/auth/google\" ;\n  }\n\n  twitterLogin(){\n    window.location.href = \"http://localhost:3000/auth/twitter\" ;\n  }\n\n  linkedinLogin(){\n    window.location.href = \"http://localhost:3000/auth/linkedin\" ; \n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngFor=\\\"let person of user\\\">\\n  <p>Welcome {{ person.name }}</p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProfileService } from '../services/profile.service';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private profileservice: ProfileService,\n    private userservice: UserService,\n    private router:Router) { }\n\n  ngOnInit() {\n    this.profileservice.getUserInfo()\n    .subscribe((result_userinfo)=>{\n      this.user=result_userinfo.user;\n      // console.log(this.user,\"from ts file\");\n    },\n    (err)=>{\n      if(err.status==401){\n        this.userservice.logout();\n        this.router.navigate(['login'])\n      }\n      console.log(err);\n    })\n  }\n\n}\n","module.exports = \".box{\\n    margin-top:20px;\\n    padding:40px 40px 40px 40px;\\n    border: 1px solid #dfdfdf;\\n    max-width:600px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXRwYXNzd29yZC9yZXNldHBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsNEJBQTRCO0lBQzVCLDBCQUEwQjtJQUMxQixnQkFBZ0I7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9yZXNldHBhc3N3b3JkL3Jlc2V0cGFzc3dvcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3h7XG4gICAgbWFyZ2luLXRvcDoyMHB4O1xuICAgIHBhZGRpbmc6NDBweCA0MHB4IDQwcHggNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGZkZmRmO1xuICAgIG1heC13aWR0aDo2MDBweDtcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 col-md-offset-3\\\">\\n      <div class=\\\"box\\\">\\n       <form [formGroup]=\\\"resetPasswordForm\\\" novalidate (submit)=\\\"resetPassword()\\\">\\n          <div *ngIf=\\\"resetPasswordForm.hasError('notSame') && resetPasswordForm.controls['confirm_password'].dirty\\\" class=\\\"alert alert-danger\\\">\\n            Password Do Not Match\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" #password/>\\n          </div>\\n          <div *ngIf=\\\"resetPasswordForm.controls['password'].invalid && (resetPasswordForm.controls['password'].dirty || resetPasswordForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"resetPasswordForm.controls['password'].errors.required\\\">\\n              Password is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"col-md-4\\\">Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirm_password\\\" formControlName=\\\"confirm_password\\\" #confirm_password/>\\n          </div>\\n          <div *ngIf=\\\"resetPasswordForm.controls['confirm_password'].invalid && (resetPasswordForm.controls['confirm_password'].dirty || resetPasswordForm.controls['confirm_password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"resetPasswordForm.controls['confirm_password'].errors.required\\\">\\n              Please Retype Password\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Continue</button>\\n            <!-- <button type=\\\"submit\\\" [disabled]=\\\"resetPasswordForm.pristine || resetPasswordForm.invalid\\\" class=\\\"btn btn-primary\\\">Continue</button> -->\\n          </div>\\n       </form> \\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ResetpasswordService } from '../services/resetpassword.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToasterService } from '../services/toaster.service';\n\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\n  resetPasswordForm:FormGroup;\n  id: any;\n\n  constructor(private fb:FormBuilder,\n    private resetpasswordservice:ResetpasswordService,\n    private activatedroute:ActivatedRoute,\n    private router:Router,\n    private toasterservice:ToasterService) {\n      this.activatedroute.params.subscribe(params=>{\n        this.id=params['id'];\n      })\n      this.createForm();\n   }\n\n  createForm(){\n    this.resetPasswordForm=this.fb.group({\n      password: ['', [Validators.required]],\n      confirm_password: ['', Validators.required]\n    }, {validator: this.checkPasswords })\n  }\n  \n  resetPassword(){\n    if(this.resetPasswordForm.valid){\n      this.resetpasswordservice.resetPassword(this.resetPasswordForm.value,this.id)\n      .subscribe((result_resetpasswordstatus)=>{\n        if(result_resetpasswordstatus.code==200){\n          this.router.navigateByUrl('/login');\n          this.toasterservice.successToaster(result_resetpasswordstatus.successmessage.msg1,result_resetpasswordstatus.successmessage.msg2);\n        }\n        else{\n          this.toasterservice.errorToaster(result_resetpasswordstatus.failuremessage.msg1,result_resetpasswordstatus.failuremessage.msg2);\n        }\n      },\n      (err)=>{\n        console.log(err);\n      })\n    }\n    else{\n      Object.keys(this.resetPasswordForm.controls).forEach((formControl : any) => {\n        this.resetPasswordForm.controls[formControl].markAsDirty()\n      })\n    }\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let password = group.controls.password.value;\n    let confirm_password = group.controls.confirm_password.value;\n\n    return password === confirm_password ? null : { notSame: true }     \n  }\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private userservice: UserService, private router:Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    if(this.userservice.isAuth()){\n      return true;\n    } \n    else{\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }})\n    }\n    \n  }\n}","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { UserService } from '../services/user.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthtokeninterceptorService implements HttpInterceptor {\n\n  constructor(public userservice: UserService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('token');\n    if(!token){\n      const sociallogintoken = localStorage.getItem('sociallogintoken');\n      request = request.clone({\n        setHeaders:{\n          Authorization: `Bearer ${sociallogintoken}`\n        }\n      });\n      \n      return next.handle(request);\n    }\n    else{\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    return next.handle(request);\n  }\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailverifyService {\n  uri=\"http://localhost:3000/zom\"\n  constructor(private http:HttpClient) { }\n\n  verifyEmail(id) : Observable<any>{\n    return this.http.get(`${this.uri}/verify/${id}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotpasswordService {\n\n  uri=\"http://localhost:3000/zom\";\n\n  constructor(private http:HttpClient) { }\n\n  forgotPassword(email) : Observable<any>{\n    return this.http.post(`${this.uri}/forgotpassword`,email)\n  }\n\n  setPassword(email) : Observable<any>{\n    return this.http.post(`${this.uri}/forgotpassword`,{email:email})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { ToasterService } from './toaster.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  \n  uri=\"http://localhost:3000/zom\"\n\n  constructor(private http:HttpClient,\n    private toasterservice:ToasterService) { }\n\n  login(user_info): Observable<boolean> {\n    return this.http.post<{token,user,msg,code}>(`${this.uri}/signin`, user_info)\n      .pipe(\n        map(result => {\n          if(result.code==200){\n            localStorage.setItem('token', result.token); \n            // localStorage.setItem('user_id',result.user._id);\n            this.toasterservice.successToaster(result.msg.str1, result.msg.str2);\n            return true;\n          }\n          else{\n            this.toasterservice.errorToaster(result.msg.str1, result.msg.str2);\n            return false;\n          }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  uri=\"http://localhost:3000/zom\";\n\n  constructor(private http:HttpClient) { }\n\n  getUserInfo(): Observable<any>{\n    return this.http.get(`${this.uri}/getprofile`);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetpasswordService {\n  \n  uri=\"http://localhost:3000/zom\";\n\n  constructor(private http:HttpClient) { }\n\n  resetPassword(details,id) :Observable<any>{\n    const obj={\n      details:details,\n      id:id\n    }\n    return this.http.post(`${this.uri}/resetpassword`,obj);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  uri=\"http://localhost:3000/zom\";\n\n  constructor(private http:HttpClient) { }\n\n  addUser(user_details): Observable<any> {\n    return this.http.post(`${this.uri}/signup`, user_details); \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialloginService {\n\n  uri = \"http://localhost:3000/zom\";\n  // url = \"http://localhost:3000/zom\";\n  \n  constructor(private http:HttpClient) { }\n\n  socialLogin(user): Observable<any>{\n    return this.http.post(`${this.uri}/sociallogin`,user);\n  }\n\n  getSocialProfile(logintoken): Observable<any>{\n    return this.http.post(`${this.uri}/socialprofile`,{logintoken:logintoken});\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService {\n\n  constructor(private toasterservice: ToastrService) { }\n\n  successToaster(str1, str2){\n    this.toasterservice.success(str1, str2);\n  }\n\n  errorToaster(msg1,msg2) {\n    this.toasterservice.error(msg1,msg2);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { Router } from '@angular/router'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n \n  uri=\"http:localhost:3000/zom\";\n  status: { code: any; };\n\n  constructor(private http:HttpClient) { }\n    data:any;\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('sociallogintoken');\n  }\n\n  public get loggedIn(): boolean {\n    return ((localStorage.getItem('token') !== null)  ||   (localStorage.getItem('sociallogintoken') !==null));\n  }\n\n  isAuth() {\n    try {\n      if ((localStorage.getItem('token'))  ||  (localStorage.getItem('sociallogintoken'))) {\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n    catch (err) {\n      return false;\n    }\n  }\n\n}","module.exports = \".box{\\n    margin-top:50px;\\n    padding:40px 40px 40px 40px;\\n    border: 1px solid #dfdfdf;\\n    max-width:600px;\\n}\\n#have_account{\\n    font-weight: bold;\\n}\\n#login_link{\\n    font-weight: bold;\\n}\\n#create{\\n    margin-top: 7px;\\n}\\n#login_btn{\\n    margin: 20px 0 0 45px;\\n}\\n#tag{\\nmargin-top: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLDRCQUE0QjtJQUM1QiwwQkFBMEI7SUFDMUIsZ0JBQWdCO0NBQ25CO0FBQ0Q7SUFDSSxrQkFBa0I7Q0FDckI7QUFDRDtJQUNJLGtCQUFrQjtDQUNyQjtBQUNEO0lBQ0ksZ0JBQWdCO0NBQ25CO0FBQ0Q7SUFDSSxzQkFBc0I7Q0FDekI7QUFDRDtBQUNBLGlCQUFpQjtDQUNoQiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3h7XG4gICAgbWFyZ2luLXRvcDo1MHB4O1xuICAgIHBhZGRpbmc6NDBweCA0MHB4IDQwcHggNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGZkZmRmO1xuICAgIG1heC13aWR0aDo2MDBweDtcbn1cbiNoYXZlX2FjY291bnR7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4jbG9naW5fbGlua3tcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbiNjcmVhdGV7XG4gICAgbWFyZ2luLXRvcDogN3B4O1xufVxuI2xvZ2luX2J0bntcbiAgICBtYXJnaW46IDIwcHggMCAwIDQ1cHg7XG59XG4jdGFne1xubWFyZ2luLXRvcDogNDBweDtcbn0iXX0= */\"","module.exports = \"<p-dialog header=\\\"Account is active through {{ provider_name }}\\\" [(visible)]=\\\"display\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" [width]=\\\"350\\\" [minWidth]=\\\"200\\\" [minY]=\\\"70\\\" \\n        [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\">\\n  <div *ngIf=\\\"facebook_provider\\\">\\n    <button id=\\\"login_btn\\\" class=\\\"btn btn-primary\\\" (click)=\\\"facebookLogin()\\\">LOG IN WITH {{ facebook_provider | uppercase }}</button>\\n  </div>\\n  <div *ngIf=\\\"google_provider\\\">\\n    <button id=\\\"login_btn\\\" class=\\\"btn btn-danger\\\" (click)=\\\"googleLogin()\\\">LOG IN WITH {{ google_provider | uppercase }}</button>\\n  </div>\\n  <div *ngIf=\\\"linkedin_provider\\\">\\n    <button id=\\\"login_btn\\\" class=\\\"btn btn-danger\\\" (click)=\\\"linkedinLogin()\\\">LOG IN WITH {{ linkedin_provider | uppercase }}</button>\\n  </div>\\n  <div *ngIf=\\\"twitter_provider\\\">\\n    <button id=\\\"login_btn\\\" class=\\\"btn btn-danger\\\" (click)=\\\"twitterLogin()\\\">LOG IN WITH {{ twitter_provider | uppercase }}</button>\\n  </div>\\n  <p id=\\\"tag\\\">If you wish to set a new password, click the button below and we'll mail you a password reset link</p>\\n  <p-footer>\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"setPassword()\\\">Set Password</button>\\n  </p-footer>\\n</p-dialog>\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n          <div class=\\\"box\\\">\\n              <form [formGroup]=\\\"angForm\\\" novalidate (submit)=\\\"addUser()\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4\\\">Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"name\\\" #name/>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n                    Name is required.\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4\\\">User Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" formControlName=\\\"username\\\" #username/>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['username'].invalid && (angForm.controls['username'].dirty || angForm.controls['username'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['username'].errors.required\\\">\\n                    User Name is required.\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4\\\">Email</label>\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" formControlName=\\\"email\\\" #email/>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                    Email is required.\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                    Please Enter valid email.\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-md-4\\\">Password</label>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" formControlName=\\\"password\\\" #password/>\\n                </div>\\n                <div *ngIf=\\\"angForm.controls['password'].invalid && (angForm.controls['password'].dirty || angForm.controls['password'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"angForm.controls['password'].errors.required\\\">\\n                    Password is required.\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['password'].hasError('minlength')\\\">\\n                    Password should be minimum of 6 characters\\n                  </div>\\n                  <div *ngIf=\\\"angForm.controls['password'].hasError('maxlength')\\\">\\n                    Password should be maximum 15 characters.\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <!-- <button type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">SignUp</button> -->\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">SignUp</button>\\n                </div>\\n                <p id=\\\"have_account\\\">Already Have an Account<a routerLink=\\\"/login\\\"><span id=\\\"login_link\\\"> Login!!</span></a></p>\\n              </form>\\n            </div><!--end of box-->\\n      </div><!--end of col-md-12-->\\n    </div><!--end of row-->\\n  </div><!--end of container-->\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport { ToasterService } from '../services/toaster.service';\nimport { SignupService } from '../services/signup.service';\nimport { ForgotpasswordService } from '../services/forgotpassword.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  angForm: FormGroup;\n  exists_message: any;\n  display: boolean = false;\n  provider_name: any;\n  email: any;\n  facebook_provider: any;\n  google_provider: any;\n  linkedin_provider: any;\n  twitter_provider: any;\n\n  constructor(private userservice: UserService,\n  private fb: FormBuilder,\n  private router:Router,\n  private toasterService:ToasterService,\n  private signupservice:SignupService,\n  private forgotpasswordservice:ForgotpasswordService,\n  ) { \n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      username: ['', Validators.required ],\n      email: ['', Validators.compose([Validators.required, Validators.email]) ],\n      password: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(15)]) ]\n   });\n  }\n\n  addUser(){\n    if(this.angForm.valid) {\n      console.log(this.angForm.value)\n      this.signupservice.addUser(this.angForm.value)\n      .subscribe((result)=>{\n        console.log(result)\n        if(result.code==200){\n          this.router.navigateByUrl('/login');\n          this.toasterService.successToaster(result.msg.str1, result.msg.str2)\n        }\n        else{\n          if(result.exists_message){\n            this.exists_message=result;\n            this.provider_name=this.exists_message.provider_name;\n            console.log(this.exists_message.provider_name)\n            for(let i=0;i<this.provider_name.length;i++){\n              if(this.provider_name[i]=='facebook'){\n                this.facebook_provider=this.provider_name[i];\n              }\n              if(this.provider_name[i]=='google'){\n                this.google_provider=this.provider_name[i];\n              }\n              if(this.provider_name[i]=='linkedin'){\n                this.linkedin_provider=this.provider_name[i];\n              }\n              if(this.provider_name[i]=='twitter'){\n                this.twitter_provider=this.provider_name[i];\n              }\n            }\n            this.email=this.exists_message.email;\n            this.display = true;\n          }\n          else{\n            this.toasterService.errorToaster(result.msg.msg1,result.msg.msg2)\n          }\n        }\n      })\n    } \n    else {\n      Object.keys(this.angForm.controls).forEach((formControl: any) => {\n        this.angForm.controls[formControl].markAsDirty()\n      })\n    }\n    \n  }\n\n  setPassword(){\n    console.log(this.email,\"from set password function\");\n    this.forgotpasswordservice.setPassword(this.email)\n    .subscribe((password_status)=>{\n      if(password_status.code==200){\n        this.display = false;\n        this.toasterService.successToaster(password_status.successmessage.msg1,password_status.successmessage.msg2);\n      }\n      else{\n        this.toasterService.errorToaster(password_status.failuremessage.msg1,password_status.failuremessage.msg2);\n      }\n    },\n    (err)=>{\n      console.log(err);\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NvY2lhbHByb2ZpbGUvc29jaWFscHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngFor=\\\"let detail of user_details\\\">\\n  <h2>Welcome {{ detail.name }}</h2>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SocialloginService } from '../services/sociallogin.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-socialprofile',\n  templateUrl: './socialprofile.component.html',\n  styleUrls: ['./socialprofile.component.css']\n})\nexport class SocialprofileComponent implements OnInit {\n  user_details: any;\n  token: any;\n\n  constructor(private socialloginservice:SocialloginService,\n    private activatedroute: ActivatedRoute) {\n      this.activatedroute.params.subscribe(params => {\n        this.token = params['token'];\n        console.log(this.token);\n        localStorage.setItem('token',this.token);\n      })\n     }\n\n  ngOnInit() {\n    this.getSocialProfile(this.token);\n    // this.socialProfile(localStorage.getItem('sociallogintoken'));\n  }\n\n  getSocialProfile(token){\n    this.socialloginservice.getSocialProfile(token)\n    .subscribe((result_profile)=>{\n      console.log(result_profile,\"from ts\")\n      this.user_details = result_profile.user;\n    })\n  }\n  // socialProfile(sociallogintoken){\n  //   this.socialloginservice.getSocialProfile(sociallogintoken)\n  //   .subscribe((result_profile)=>{\n  //     this.user_details = result_profile.user;\n  //   },\n  //   (err)=>{\n  //     console.log(err);\n  //   })\n  // }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}